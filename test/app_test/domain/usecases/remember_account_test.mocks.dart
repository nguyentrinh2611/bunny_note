// Mocks generated by Mockito 5.3.2 from annotations
// in s_c/test/app_test/domain/usecases/remember_account_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:s_c/app/domain/repositories/app_repository.dart' as _i3;
import 'package:s_c/core/error/failures.dart' as _i5;
import 'package:s_c/core/usecases/usecase.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppRepository extends _i1.Mock implements _i3.AppRepository {
  MockAppRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> rememberAccount({
    required String? username,
    required String? password,
    required String? uid,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #rememberAccount,
          [],
          {
            #username: username,
            #password: password,
            #uid: uid,
          },
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #rememberAccount,
            [],
            {
              #username: username,
              #password: password,
              #uid: uid,
            },
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> clearRememberedAccount(
          _i6.NoParams? noParams) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearRememberedAccount,
          [noParams],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #clearRememberedAccount,
            [noParams],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
