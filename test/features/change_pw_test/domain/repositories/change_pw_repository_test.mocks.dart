// Mocks generated by Mockito 5.3.2 from annotations
// in s_c/test/features/change_pw_test/domain/repositories/change_pw_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:s_c/app/domain/entities/sc_user.dart' as _i5;
import 'package:s_c/core/network/network_info.dart' as _i6;
import 'package:s_c/features/change_pw/data/datasources/change_pw_local_data_source.dart'
    as _i4;
import 'package:s_c/features/change_pw/data/datasources/change_pw_remote_data_source.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ChangePwRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChangePwRemoteDataSource extends _i1.Mock
    implements _i2.ChangePwRemoteDataSource {
  MockChangePwRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<String> changePw({required String? newPassword}) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePw,
          [],
          {#newPassword: newPassword},
        ),
        returnValue: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}

/// A class which mocks [ChangePwLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockChangePwLocalDataSource extends _i1.Mock
    implements _i4.ChangePwLocalDataSource {
  MockChangePwLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> saveChangedPw({required _i5.SCUser? user}) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveChangedPw,
          [],
          {#user: user},
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [ChangePwRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class ChangePwRemoteDataSourceForTest extends _i1.Mock
    implements _i2.ChangePwRemoteDataSource {
  @override
  _i3.Future<String> changePw({required String? newPassword}) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePw,
          [],
          {#newPassword: newPassword},
        ),
        returnValue: _i3.Future<String>.value(''),
        returnValueForMissingStub: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}
